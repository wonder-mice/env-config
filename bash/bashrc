# if not running interactively, don't do anything
[ -z "$PS1" ] && return

# load settings
if [[ -z ${ENV_CONFIG_DIR} ]]; then
	echo "Warning: ENV_CONFIG_DIR is not set (https://github.com/wonder-mice/env-config)"
	# we can try to guess, but will not - fix your environment first, then play with it
	#ENV_CONFIG_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)
	return 1
fi
eval ec_dir="${ENV_CONFIG_DIR}"
if [[ ! -f "${ec_dir}/settings" ]]; then
	echo "Warning: no settings file \"${ec_dir}/settings\" (https://github.com/wonder-mice/env-config)"
	return 1
fi
source "${ec_dir}/settings"
if [[ -z ${ENV_CONFIG_PLATFORM} ]]; then
	echo "Warning: ENV_CONFIG_PLATFORM is not set (https://github.com/wonder-mice/env-config)"
	# again, it is possible to detect platform here, but we will not - file must exist
	return 1
fi
# defaults - mostly to document available options
: ${ENV_CONFIG_COLORS:='yes"}
: ${ENV_CONFIG_BASH_PROMPT_GIT_BRANCH:='yes'}

# hello kitty
echo " /\_/\ "
echo "( o.o )"
echo " > ^ < "

# readline
INPUTRC=~/.inputrc

# custom prompt
if [[ ${ENV_CONFIG_COLORS} == 'yes' ]]; then
	PS1='\[\033[0;32m\]\W\[\033[00m\]\$ '
else
	PS1='\W$ '
fi
if [[ ${ENV_CONFIG_BASH_PROMPT_GIT_BRANCH} == 'yes' ]]; then
	ec_bash_prompt_git_branch='$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1] /")'
	if [[ ${ENV_CONFIG_COLORS} == 'yes' ]]; then
		ec_bash_prompt_git_branch="\[\033[0;34m\]${ec_bash_prompt_git_branch}\[\033[00m\]"
	fi
	PS1="${ec_bash_prompt_git_branch}${PS1}"
fi

# colorize commands
if [[ ${ENV_CONFIG_COLORS} == 'yes' ]]; then
	if [[ ${ENV_CONFIG_PLATFORM} == 'darwin' ]]; then
		alias ls="ls -G"
		alias grep="grep --color=auto"
	elif [[ ${ENV_CONFIG_PLATFORM} == 'linux' ]]; then
		alias ls='ls --color=auto'
		alias grep='grep --color=auto'
	fi
fi

# git completion
source "${ec_dir}/bash/git-completion.bash"
# svn completion
source "${ec_dir}/bash/svn-completion.bash"
