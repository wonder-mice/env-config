" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
" disable file types before changing runtimepath - will be enabled later to
" toggle loading of files from added runtimepath dirs
filetype off
" add env-config dirs to runtimepath
let &rtp = printf('%s/vim,%s,%s/vim/after', g:env_config_dir, &rtp, g:env_config_dir)
" allow backspacing over everything in insert mode
set backspace=indent,eol,start
" keep 50 lines of command line history
set history=50
" show the cursor position all the time
set ruler
" display incomplete commands
set showcmd
" do incremental searching
set incsearch
" use Q for formating instead of entering Vim Ex mode
nnoremap Q gq
" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>
" when the terminal has colors, switch syntax and search highlighting
if &t_Co > 2 || has("gui_running")
	syntax on
	set hlsearch
endif

" @env-config-doc * vim: disable mouse support
set mouse-=a
" @env-config-doc * vim: turn on line numbers
set number
" @env-config-doc * vim: set encoding=utf-8
set encoding=utf-8
" @env-config-doc * vim: set tab to 4 spaces and use tabs
set tabstop=4
set shiftwidth=4
set noexpandtab
" @env-config-doc * vim: don't wrap lines
set nowrap
" @env-config-doc * vim: enable modeline (inline vim settings)
set modeline
set modelines=4
" @env-config-doc * vim: smart ignore case (ignore when lowercase only)
set ignorecase
set smartcase
" @env-config-doc * vim: <Leader>/ for nohlsearch
nnoremap <silent> <Leader>/ :nohlsearch<CR>
" @env-config-doc * vim: highlight trailing spaces
" @env-config-doc * vim: highlight spaces before a tab
highlight ExtraWhitespace term=standout ctermfg=15 ctermbg=1 guifg=White guibg=Red
autocmd Syntax * syn match ExtraWhitespace '\s\+$\| \+\ze\t'

" @env-config-doc * vim: store backup files in ~/.vim/backup
set backupdir=~/.vim/backup
" @env-config-doc * vim: store swap files in ~/.vim/swap
set dir=~/.vim/swap
set swapfile

" Only do this part when compiled with support for autocommands.
if has("autocmd")
	" Enable file type detection.
	" Use the default filetype settings, so that mail gets 'tw' set to 72,
	" 'cindent' is on in C files, etc.
	" Also load indent files, to automatically do language-dependent indenting.
	filetype plugin indent on
	" Put these in an autocmd group, so that we can delete them easily.
	augroup vimrcEx
	au!
	" For all text files set 'textwidth' to 78 characters.
	autocmd FileType text setlocal textwidth=78
	" When editing a file, always jump to the last known cursor position.
	" Don't do it when the position is invalid or when inside an event handler
	" (happens when dropping a file on gvim).
	" Also don't do it when the mark is in the first line, that is the default
	" position when opening a file.
	autocmd BufReadPost *
		\ if line("'\"") > 1 && line("'\"") <= line("$") |
		\   exe "normal! g`\"" |
		\ endif
	augroup END
else
	" always set autoindenting on
	set autoindent
endif

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
	command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		\ | wincmd p | diffthis
endif
