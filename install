#!/bin/sh

# detect platform
ENV_CONFIG_PLATFORM='unknown'
if [[ ${OSTYPE} == darwin* ]]; then
	ENV_CONFIG_PLATFORM='darwin'
elif [[ ${OSTYPE} == linux* ]]; then
	ENV_CONFIG_PLATFORM='linux'
else
	echo "Error: unknown OS type \"${OSTYPE}\""
	exit 1
fi

# settings
eval ec_dir=${ENV_CONFIG_DIR}
if [[ -n ${ec_dir+#} && -f ${ec_dir}/settings ]]; then
	source ${ec_dir}/settings
fi
ENV_CONFIG_DIR=${ENV_CONFIG_DIR-'~/.env-config'}
ENV_CONFIG_COLORS=${ENV_CONFIG_COLORS-'yes'}

# command line args
ec_src=$(dirname "${BASH_SOURCE[0]}")
ec_verbose='no'
ec_dryrun='no'
while getopts ":hvync:p:" OPT; do
	case ${OPT} in
		h)
			echo "Options are:"
			echo "    -h          - show this help"
			echo "    -v          - verbose output"
			echo "    -y          - dry run"
			echo "    -c (yes|no) - enable colors (default is ${ENV_CONFIG_COLORS})"
			echo "    -p <dir>    - install to dir (default is \"${ENV_CONFIG_DIR}\")"
			exit 1
			;;
		v)
			ec_verbose='yes'
			;;
		y)
			ec_dryrun='yes'
			;;
		p)
			ENV_CONFIG_DIR=${OPTARG}
			;;
		c)
			if [[ ${OPTARG} != 'yes' && ${OPTARG} != 'no' ]]; then
				echo "Error: invalid value ${OPTARG} for option -c"
				exit 1
			fi
			ENV_CONFIG_COLORS=${OPTARG}
			;;
		\?)
			echo "Error: invalid option -${OPTARG}"
			exit 1
			;;
		:)
			echo "Error: option -${OPTARG} requires an argument"
			exit 1
			;;
	esac
done

# Check install dir path
eval ec_dir=${ENV_CONFIG_DIR}
ec_dir_check=$(printf '%q' "${ENV_CONFIG_DIR}")
if [[ ${ec_dir_check} != ${ENV_CONFIG_DIR} ]]; then
	echo "Error: install dir \"${ENV_CONFIG_DIR}\" must not contain spaces, variables or other expandable tokens (except ~)"
	exit 1
fi
ec_dir_check=${ec_dir_check/#~/${HOME}}
if [[ ${ec_dir_check} != ${ec_dir} ]]; then
	echo "Error: install dir \"${ENV_CONFIG_DIR}\" requires complex substitution that is not supported"
	exit 1
fi
if [[ ${ec_dir} != /* ]]; then
	echo "Error: install dir \"${ENV_CONFIG_DIR}\" doesn't evaluate to absolute path (\"${ec_dir}\")"
	exit 1
fi

if [[ ${ec_verbose} == 'yes' ]]; then
	echo "Source dir:  \"${ec_src}\""
	echo "Install dir: \"${ENV_CONFIG_DIR}\" (\"${ec_dir}\")"
	echo "Platform:    \"${ENV_CONFIG_PLATFORM}\""
	echo "Colors:      \"${ENV_CONFIG_COLORS}\""
	echo "Dryrun:      \"${ec_dryrun}\""
fi

if [[ ${ec_dryrun} == 'no' ]]; then
	mkdir -p "${ec_dir}" || exit 1

	# settings file
	ec_settings_file="${ec_dir}/settings"
	echo \
		"ENV_CONFIG_PLATFORM='${ENV_CONFIG_PLATFORM}'\n" \
		"ENV_CONFIG_COLORS='${ENV_CONFIG_COLORS}'\n" \
		| sed -e "s;^[[:blank:]]*;;" -e "/^$/d" > ${ec_settings_file}

	# readline - copy
	mkdir -p "${ec_dir}/readline" || exit 1
	cp ${ec_src}/readline/inputrc ${ec_dir}/readline/inputrc

	# readline - source
	eval EC_READLINERC_FILE='~/.inputrc'
	if ! grep -Fq "${ENV_CONFIG_DIR}" ${EC_READLINERC_FILE} &> /dev/null; then
		# ${ENV_CONFIG_DIR} was not found in ${EC_READLINERC_FILE}
		# It is OK to append init script.
		# If ${EC_READLINERC_FILE} not empty, append extra new line for extra style
		if [[ -s ${EC_READLINERC_FILE} ]]; then
			echo >> ${EC_READLINERC_FILE};
		fi
		sed \
			-e "s;\${ENV_CONFIG_DIR};${ENV_CONFIG_DIR};" \
			"${ec_src}/readline/inputrc-init" >> ${EC_READLINERC_FILE}
	fi

	# bash - copy
	mkdir -p "${ec_dir}/bash" || exit 1
	sed \
		-e "s;^#ENV_CONFIG_DIR=<path>.*;ENV_CONFIG_DIR=\'${ENV_CONFIG_DIR}\';" \
		"${ec_src}/bash/bashrc" > ${ec_dir}/bash/bashrc || exit 1
	# https://raw.github.com/git/git/master/contrib/completion/git-completion.bash
	cp "${ec_src}/bash/git-completion.bash" "${ec_dir}/bash/git-completion.bash"
	# https://svn.apache.org/repos/asf/subversion/trunk/tools/client-side/bash_completion
	cp "${ec_src}/bash/svn-completion.bash" "${ec_dir}/bash/svn-completion.bash"

	# bash - source
	case ${ENV_CONFIG_PLATFORM} in
		'darwin') eval EC_BASHRC_FILE='~/.bash_profile';;
		'linux') eval EC_BASHRC_FILE='~/.bashrc';;
		*) echo "Error: unknown platform ${ENV_CONFIG_PLATFORM}"; exit 1;;
	esac
	if ! grep -Fq "${ENV_CONFIG_DIR}" ${EC_BASHRC_FILE} &> /dev/null; then
		# ${ENV_CONFIG_DIR} was not found in ${EC_BASHRC_FILE}
		# It is OK to append init script.
		# If ${EC_BASHRC_FILE} not empty, append extra new line for extra style
		if [[ -s ${EC_BASHRC_FILE} ]]; then
			echo >> ${EC_BASHRC_FILE};
		fi
		sed \
			-e "s;\${ENV_CONFIG_DIR};${ENV_CONFIG_DIR};" \
			"${ec_src}/bash/bashrc-init" >> ${EC_BASHRC_FILE}
	fi
fi

echo "Done!"
